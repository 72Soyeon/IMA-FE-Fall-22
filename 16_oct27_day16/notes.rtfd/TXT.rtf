{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Consolas;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red27\green29\blue31;\red255\green255\blue255;\red203\green35\blue57;
\red244\green246\blue249;\red27\green31\blue34;\red7\green68\blue184;\red218\green76\blue12;\red91\green40\blue180;
\red6\green33\blue79;\red0\green0\blue233;\red87\green96\blue106;}
{\*\expandedcolortbl;;\cssrgb\c14118\c15294\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c84314\c22745\c28627;
\cssrgb\c96471\c97255\c98039;\cssrgb\c14118\c16078\c18039;\cssrgb\c0\c36078\c77255;\cssrgb\c89020\c38431\c3529;\cssrgb\c43529\c25882\c75686;
\cssrgb\c1176\c18431\c38431;\cssrgb\c0\c0\c93333;\cssrgb\c41569\c45098\c49020;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww16320\viewh16080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 Loading scripts\

\b0 \ulnone \
Load at end of Body tag\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0
\f1\fs30 \cf2 \cb3 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Without\'a0
\f2\fs26 async
\f1\fs30 \'a0or\'a0
\f2\fs26 defer
\f1\fs30 , browser will run your script immediately, before rendering the elements that's below your script tag.\cb1 \uc0\u8232 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 With\'a0
\f2\fs26 async
\f1\fs30 \'a0(asynchronous), browser will continue to load the HTML page and render it while the browser load and execute the script at the same time.\cb1 \uc0\u8232 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 With\'a0
\f2\fs26 defer
\f1\fs30 , browser will run your script when the page finished parsing. (not necessary finishing downloading all image files. This is good.)\cb1 \uc0\u8232 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\

\b \ul Revisit the DOM
\b0 \ulnone \
\
- HTML elements, AKA nodes, can have children and parents\
\
- Calling childNodes returns something that looks like an array but is actually a NodeList object, which means you don\'92t get all the same methods as a normal array. You can use forEach() and you can convert it to a normal array using Array.from()\
\
- Spaces return as textNodes, so just be mindful of those\
\
- There is also one parentNode, firstChid, lastChild, or nextSibling\
\
A better way to traverse the DOM is to query the document based on either a class name, element type, or element ID.\
\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs27\fsmilli13600 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 const\cf6 \strokec6  existingElements \cf7 \strokec7 =\cf6 \strokec6  \cf8 \strokec8 Array\cf6 \strokec6 .\cf9 \strokec9 from\cf6 \strokec6 (document.\cf9 \strokec9 getElementsByClassName\cf6 \strokec6 (\cf10 \strokec10 "exists"\cf6 \strokec6 ));\
existingElements.\cf9 \strokec9 forEach\cf6 \strokec6 (element \cf7 \strokec7 =>\cf6 \strokec6  \{\
  console.\cf9 \strokec9 log\cf6 \strokec6 (element);\
\})\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
querySelectorAll() or querySelector()\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.tiff \width12500 \height5040 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/thejsway/thejsway/blob/master/manuscript/chapter14.md#choosing-a-selection-method"}}{\fldrslt 
\f3 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 \outl0\strokewidth0 \strokec11 https://github.com/thejsway/thejsway/blob/master/manuscript/chapter14.md#choosing-a-selection-method}}
\f3 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 \outl0\strokewidth0 \strokec11 \
\

\f0 \cf0 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Now we know how to select elements, what can we do with them? Get information about them- \
\
innerHtml, textContent, attributes (id, href, value are directly accessible), hasAttribute\
\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs27\fsmilli13600 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 if\cf6 \strokec6  (document.\cf9 \strokec9 querySelector\cf6 \strokec6 (\cf10 \strokec10 "a"\cf6 \strokec6 ).\cf9 \strokec9 hasAttribute\cf6 \strokec6 (\cf10 \strokec10 "target"\cf6 \strokec6 )) \{\
  console.\cf9 \strokec9 log\cf6 \strokec6 (\cf10 \strokec10 "The first link has a target attribute."\cf6 \strokec6 );\
\} \cf4 \strokec4 else\cf6 \strokec6  \{\
  console.\cf9 \strokec9 log\cf6 \strokec6 (\cf10 \strokec10 "The first link does not have a target attribute."\cf6 \strokec6 ); \cf12 \strokec12 // Will be shown\cf6 \strokec6 \
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
Classlist - make sure you are accessing ONE element\
Contains- asks if element has a class\
\
\

\b \ul Change page structure\

\b0 \ulnone \
\
Innerhtml - add html via a string (this isn\'92t the best way to add lots of html)\
textContent - updates the strong inside an element\
setAttribute, or use the directly accessible values \
classList.remove / add / toggle\
\
createElement, createTextNode\
Set attributes\
appendChild(), replaceChild, insertBefore(), insertAdjacentHTML(4 options), removeChild()\
\

\b \ul Change page appearance
\b0 \ulnone \
\
The plain .style won\'92t give you much unless all your style is inline (which it shouldn\'92t be).  You can set via .style (though I prefer toggling class lists whenever possible)\
Use getComputedStyle(), and camel case any property that has a hyphen in it\
\

\b \ul Respond to events
\b0 \
\ulnone \
addEventListener\
\
document.getElementById.addEventListener(\'91click\'92, e => \{\})\
\
e.preventDefault()\
e.stopPropegation()\
\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/thejsway/thejsway/blob/master/manuscript/chapter16.md#event-propagation"}}{\fldrslt 
\f3 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 \outl0\strokewidth0 \strokec11 https://github.com/thejsway/thejsway/blob/master/manuscript/chapter16.md#event-propagation}}}